version: "3.7" 
services:
    idp.db:
        image: mysql:8.0.19
        container_name: idp-mysql
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: H2020.IPMDecisions.IDP
        volumes:
            - idp_msql_dbdata:/var/lib/mysql
            - ./IDP/MySQL_Init_Script/init.sql:/docker-entrypoint-initdb.d/init.sql
        restart: always
    idp.api:
        depends_on:
            - idp.db
        image: ipmdecisions/identityproviderservice:develop
        container_name: idp-api
        hostname: idp.api
        restart: always
        ports:
            - "80"
            - "443"
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings:MySqlDbConnection=Server=idp.db;Database=H2020.IPMDecisions.IDP;Uid=ipm_idp_user;Pwd=user_password;
            - JwtSettings:TokenLifetimeMinutes=80
            - JwtSettings:SecretKey=BFCVbbtvC1QoutaBujROE3cD_sRE3n16ohmM4sUQC0Q
            - JwtSettings:IssuerServerUrl=IPM_IdentityProvider
            - JwtSettings:ValidAudiences=https://testclient.com;DssOwner
            - AllowedHosts=*
            - IPMEmailMicroservice:ApiGatewayAddress=http://apg.api/
            - IPMEmailMicroservice:EmailMicroservice=api/eml/
            - IPMEmailMicroservice:ContentTypeHeader=application/vnd.h2020ipmdecisions.email+json
            - IPMEmailMicroservice:SecurityTokenCustomHeader=ipm-eml-auth 
            - IPMEmailMicroservice:SecurityToken=1234
            - NLog:targets:logfile:fileName=./logs/imp-decisions-IDP-$${shortdate}.log
            - NLog:rules:logfile:minLevel=Info
            - NLog:rules:logconsole:minLevel=Info
            - UIPageAddresses:ResetPasswordFormPageAddress=http://localhost:4999/accounts/resetpassword
            - UIPageAddresses:ConfirmUserFormPageAddress=http://localhost:4999/accounts/confirmemail
    upr.db:
        image: postgres:12.2
        container_name: upr-postgres
        environment:
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: H2020.IPMDecisions.UPR
        restart: always
        expose:
            - "5432"
        ports:
            - "5432:5432"
        volumes: 
            - upr_postgres_volume:/var/lib/postgresql/data
            - ./UPR/Postgresql_Init_Script/1.createUser.sql:/docker-entrypoint-initdb.d/1.createUser.sql
            - ./UPR/Postgresql_Init_Script/2.dbBackup.sql:/docker-entrypoint-initdb.d/2.dbBackup.sql
    upr.api:
        depends_on:
            - upr.db
        image: ipmdecisions/userprovisionservice:develop
        container_name: upr-api
        hostname: upr.api
        restart: always
        ports:
            - "80"
            - "443" 
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings:MyPostgreSQLConnection=Host=upr.db;Port=5432;Database=H2020.IPMDecisions.UPR;Username=upr_user;Password=xxxxxx;
            - JwtSettings:SecretKey=BFCVbbtvC1QoutaBujROE3cD_sRE3n16ohmM4sUQC0Q
            - JwtSettings:IssuerServerUrl=IPM_IdentityProvider
            - JwtSettings:ValidAudiences=https://testclient.com
    eml.api:
        image: ipmdecisions/emailservice:develop
        container_name: eml-api
        hostname: eml.api
        restart: always
        ports:
            - "80"
            - "443" 
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - JwtSettings:SecretKey=BFCVbbtvC1QoutaBujROE3cD_sRE3n16ohmM4sUQC0Q
            - JwtSettings:IssuerServerUrl=IPM_IdentityProvider
            - JwtSettings:ValidAudiences=https://testclient.com
            - IPMEmailMicroservice:ContentTypeHeader=application/vnd.h2020ipmdecisions.email+json
            - IPMEmailMicroservice:SecurityTokenCustomHeader=ipm-eml-auth 
            - IPMEmailMicroservice:SecurityToken=1234
            - EmailSettings:SmtpServer=smtp.sendgrid.net
            - EmailSettings:SmtpPort=465
            - EmailSettings:UseSmtpLoginCredentials=true
            - EmailSettings:SmtpUsername=apikey
            - EmailSettings:SmtpPassword=YourToken - Needs to be created on SendGrid
            - EmailSettings:FromAddress=YourEmail - Needs to be confirmed and registered on SendGrid
            - EmailSettings:FromName=IPM Decisions
            - EmailSettings:EnableSsl=true
            - MailingListSetting:IPMDecisionsListId=TheListIdOnSendGrid - Needs to be created on SendGrid
    cms:
        image: agentejo/cockpit
        hostname: cms
        container_name: ipm-cms
        restart: always
        ports:
            - "5001:80"
        volumes:
        - ./CMS/storage :/var/www/html/storage
        - ./CMS/config :/var/www/html/config
        environment:
            APP_NAME: H2020.IPMDecisions.CMS
            COCKPIT_SESSION_NAME: cockpit
    dss.api:
        image: ipmdecisions/dss_api:testing
        hostname: dss.api
        container_name: dss-api
        restart: always
        ports:
            - "8080"
    wx.api:
        image: ipmdecisions/weather_api:testing
        hostname: wx.api
        container_name: wx-api
        restart: always
        ports:
            - "8080"
    apg.api:        
        image: ipmdecisions/apigateway:develop
        links:
            - idp.api
            - upr.api
            - cms
            - eml.api
            - dss.api
            - wx.api
        depends_on:
            - idp.api
            - upr.api
            - cms
            - eml.api
            - dss.api
            - wx.api
        container_name: apg-api
        restart: always
        ports:
            - "5000:80"
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - JwtSettings:SecretKey=BFCVbbtvC1QoutaBujROE3cD_sRE3n16ohmM4sUQC0Q
            - JwtSettings:IssuerServerUrl=IPM_IdentityProvider
            - JwtSettings:ValidAudiences=https://testclient.com
            - AllowedHosts=*
            - AccessClaims:ClaimTypeName="UserAccessType"
            - AccessClaims:UserAccessLevels="Level1;Level2;Level3"
        volumes:
            - ./APG/Configuration:/app/Configuration
    web:
        container_name: ipm-ui
        restart: always
        image: ipmdecisions/ipm-decisions-platform
        ports:
        - "4999:80"
        - "444:443"
    adminer:
        image: adminer
        container_name: adminer
        restart: always
        ports:
            - 8080:8080
        links:
            - idp.db
            - upr.db
        depends_on:
            - idp.db
            - upr.db
volumes:
    idp_msql_dbdata:
    upr_postgres_volume:
    